// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// 風船処理の説明[balloon.h]
// Author : Koki Nishiyama
//
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#ifndef _BALLOON_H_
#define _BALLOON_H_	 // ファイル名を基準を決める

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// インクルードファイル
//
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include "scene_X.h"

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// 前方宣言
//
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// マクロ定義
//
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// クラス
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class CBalloon : public CScene_X
{
public:

	/* 関数 */
	CBalloon();
	~CBalloon();
	void Init(void);
	void Uninit(void);
	void Update(void);
	void Draw(void);
#ifdef _DEBUG
	void Debug(void);
#endif // _DEBUG
	// 当たった後の処理
	// 引数1:オブジェクトタイプ
	// 引数2:相手のシーン情報
	virtual void Scene_Collision(
		int const &nObjType = 0,	// オブジェクトタイプ
		CScene * pScene = NULL		// 相手のシーン情報
	);
	// あたり判定を強制的に削除
	void CollisionDelete(void);
	// 作成処理(シーン管理)
	static CBalloon * Create(
		D3DXVECTOR3 const &pos,
		D3DXVECTOR3 const &rot = D3DVECTOR3_ZERO,
		int const &nModelId = 0,
		bool const &bShadowMap = false
	);	
	// 作成処理(個人管理)
	static CBalloon * Create_Self(
		D3DXVECTOR3 const &pos,
		D3DXVECTOR3 const &rot = D3DVECTOR3_ZERO,
		int const &nModelId = 0,
		bool const &bShadowMap = false
	);
	// 作成処理(個人管理)
	static unique_ptr<CBalloon> Create_Uni(
		D3DXVECTOR3 const &pos,
		D3DXVECTOR3 const &rot = D3DVECTOR3_ZERO,
		int const &nModelId = 0,
		bool const &bShadowMap = false
	);
	// 当たっているかの判定を取得
	bool const &GetBalloonCollision(void) { return m_bCollision; };
protected:
private:
	/* 関数 */
	/* 変数 */
	bool m_bCollision;
};

#endif