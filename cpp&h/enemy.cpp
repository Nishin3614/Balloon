// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// 敵処理 [enemy.cpp]
// Author : KOKI NISHIYAMA
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include "enemy.h"
#include "player.h"
#include "3Dparticle.h"
#include "game.h"
#include "circleshadow.h"

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// マクロ定義
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#define ENEMY_KEYMOVE (1)
#define ENEMY_G (0.5f)			// 重力
#define ENEMY_RESISTANCE (0.5f)// 抵抗力
#define ENEMY_MOTIONFILE "data/LOAD/CHARACTER/buffalo_motion.txt"	// モーションのファイル名

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// 静的変数宣言
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// オーバーロードコンストラクタ(子供用)
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CEnemy::CEnemy(CHARACTER const &character) : CCharacter::CCharacter(character)
{
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// デストラクタ処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CEnemy::~CEnemy()
{
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 初期化処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void CEnemy::Init(void)
{
	// キャラクター初期化
	CCharacter::Init();
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 終了処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void CEnemy::Uninit(void)
{
	// キャラクター終了処理
	CCharacter::Uninit();
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 更新処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void CEnemy::Update(void)
{
	// キャラクター更新処理
	CCharacter::Update();
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 描画処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void CEnemy::Draw(void)
{
	// キャラクター描画処理
	CCharacter::Draw();
}

#ifdef _DEBUG
//-------------------------------------------------------------------------------------------------------------
// デバッグ表示
//-------------------------------------------------------------------------------------------------------------
void CEnemy::Debug(void)
{
	CCharacter::Debug();
}
#endif // _DEBUG

//-------------------------------------------------------------------------------------------------------------
// シーン継承の当たり判定処理
//-------------------------------------------------------------------------------------------------------------
void CEnemy::Scene_Collision(int const & nObjType, CScene * pScene)
{
	CCharacter::Scene_Collision(nObjType, pScene);
}

//-------------------------------------------------------------------------------------------------------------
// 死亡処理
//-------------------------------------------------------------------------------------------------------------
void CEnemy::Die(void)
{
	CDebugproc::Print("----敵情報----\n");
	CCharacter::Die();
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 読み込み処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
HRESULT CEnemy::Load(void)
{
	return S_OK;
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 読み込んだ情報を破棄処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void CEnemy::UnLoad(void)
{
}