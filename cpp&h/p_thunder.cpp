// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// プレイヤー(雷)処理 [p_thunder.cpp]
// Author : KOKI NISHIYAMA
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include "p_thunder.h"

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// マクロ定義
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#define P_THUNDER_FRONTFORCE (10)
#define P_THUNDER_G (0.5f)			// 重力
#define P_THUNDER_RESISTANCE (0.5f)// 抵抗力

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// 静的変数宣言
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// コンストラクタ処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CP_thunder::CP_thunder() : CPlayer::CPlayer(CHARACTER_P_THUNDER)
{
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// デストラクタ処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CP_thunder::~CP_thunder()
{
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 初期化処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void CP_thunder::Init(void)
{
	CPlayer::Init();
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 終了処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void CP_thunder::Uninit(void)
{
	CPlayer::Uninit();
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 更新処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void CP_thunder::Update(void)
{
	CPlayer::Update();
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 描画処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void CP_thunder::Draw(void)
{
	CPlayer::Draw();
}

//-------------------------------------------------------------------------------------------------------------
// 死んだときの処理
//-------------------------------------------------------------------------------------------------------------
void CP_thunder::Die(void)
{
}

#ifdef _DEBUG
//-------------------------------------------------------------------------------------------------------------
// デバッグ表示
//-------------------------------------------------------------------------------------------------------------
void CP_thunder::Debug(void)
{
}
#endif // _DEBUG

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 生成処理(シーン管理)
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CP_thunder * CP_thunder::Create(
	D3DXVECTOR3 const & pos,
	D3DXVECTOR3 const & rot
)
{
	// 変数宣言
	CP_thunder * pP_thunder;
	// メモリの生成(初め->基本クラス,後->派生クラス)
	pP_thunder = new CP_thunder();
	// シーン管理設定
	pP_thunder->ManageSetting(CScene::LAYER_CHARACTER);
	// 設定
	pP_thunder->SetPos(pos);
	pP_thunder->SetRot(rot);
	pP_thunder->SetRotDest(rot);
	// 初期化処理
	pP_thunder->Init();
	// 生成したオブジェクトを返す
	return pP_thunder;
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 生成処理(個人管理)
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CP_thunder * CP_thunder::Create_Self(
	D3DXVECTOR3 const & pos,
	D3DXVECTOR3 const & rot
)
{
	// 変数宣言
	CP_thunder * pP_thunder;
	// メモリの生成(初め->基本クラス,後->派生クラス)
	pP_thunder = new CP_thunder();
	// 設定
	pP_thunder->SetPos(pos);
	pP_thunder->SetRot(rot);
	pP_thunder->SetRotDest(rot);
	// 初期化処理
	pP_thunder->Init();
	// 生成したオブジェクトを返す
	return pP_thunder;
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// リソース情報読み込み処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
HRESULT CP_thunder::Load(void)
{
	return S_OK;
}

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 読み込んだリソース情報を破棄処理
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void CP_thunder::UnLoad(void)
{
}
