// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// キャラクター選択処理 [selectcharacter.cpp]
// Author : KOKI NISHIYAMA
//
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include "selectcharacter.h"
/* 描画 */
#include "p_thunder.h"
#include "p_zombie.h"

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// マクロ定義
//
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// 静的変数宣言
//
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
int CSelectCharacter::m_SaveCharaType[CONTROLPLAYER_MAX] = {};	// プレイヤーが選んだキャラクタータイプを保存

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// コンストラクタ
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CSelectCharacter::CSelectCharacter() : CScene::CScene()
{
	// 初期化
	m_pThunder = NULL;
	m_pZombie = NULL;
	m_CharacterType = 0;
	m_PlayerID = 0;
}

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// デストラクタ
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CSelectCharacter::~CSelectCharacter()
{
}

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 初期化
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void CSelectCharacter::Init(void)
{
	// プレイヤー(雷)
	m_pThunder = CP_thunder::Create_Self(m_pos);
	// プレイヤー(ゾンビ)
	m_pZombie = CP_zombie::Create_Self(m_pos);
}

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 終了
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void CSelectCharacter::Uninit(void)
{
	// プレイヤー(雷)がNULLではないなら
	// ->終了処理
	if (m_pThunder != NULL)
	{
		m_pThunder->Uninit();
		delete m_pThunder;
		m_pThunder = NULL;
	}
	// プレイヤー(ゾンビ)がNULLではないなら
	// ->終了処理
	if (m_pZombie != NULL)
	{
		m_pZombie->Uninit();
		delete m_pZombie;
		m_pZombie = NULL;
	}
}

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 更新
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void CSelectCharacter::Update(void)
{
	// 右が入力されたら
	// ->キャラクター番号が加算
	if (CManager::GetKeyConfig()->GetKeyConfigTrigger(CKeyConfig::CONFIG_RIGHT))
	{
		m_CharacterType++;
	}
	// 左が入力されたら
	// ->キャラクター番号が減算
	if (CManager::GetKeyConfig()->GetKeyConfigTrigger(CKeyConfig::CONFIG_LEFT))
	{
		m_CharacterType--;
	}
	// 範囲設定
	if (m_CharacterType >= CPlayer::CHARATYPE_MAX)
	{
		m_CharacterType = 0;
	}
	else if (m_CharacterType < 0)
	{
		m_CharacterType = CPlayer::CHARATYPE_MAX - 1;
	}
#ifdef _DEBUG
	CDebugproc::Print("キャラクター選択:%d\n", m_CharacterType);
#endif // _DEBUG

	// 現在のキャラクター番号の保存
	m_SaveCharaType[m_PlayerID] = m_CharacterType;

	// プレイヤーの更新
	switch (m_CharacterType)
	{
		// プレイヤー(雷)
	case 0:
		// プレイヤー(雷)がNULLではないなら
		// ->更新処理
		if (m_pThunder != NULL)
		{
			m_pThunder->Update();
		}
		break;
		// プレイヤー(ゾンビ)
	case 1:
		// プレイヤー(ゾンビ)がNULLではないなら
		// ->更新処理
		if (m_pZombie != NULL)
		{
			m_pZombie->Update();
		}
		break;
	default:
		break;
	}
}

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 描画
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void CSelectCharacter::Draw(void)
{
	switch (m_CharacterType)
	{
		// プレイヤー(雷)
	case 0:
		// プレイヤー(雷)がNULLではないなら
		// ->描画処理
		if (m_pThunder != NULL)
		{
			m_pThunder->Draw();
		}
		break;
		// プレイヤー(ゾンビ)
	case 1:
		// プレイヤー(ゾンビ)がNULLではないなら
		// ->描画処理
		if (m_pZombie != NULL)
		{
			m_pZombie->Draw();
		}
		break;
	default:
		break;
	}
}

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 生成
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CSelectCharacter * CSelectCharacter::Create(
	int const &nPlayerId,	// プレイヤーID
	D3DXVECTOR3 const &pos	// 位置
)
{
	// 変数宣言
	CSelectCharacter * pSelect_chara;
	// メモリの生成(初め->基本クラス,後->派生クラス)
	pSelect_chara = new CSelectCharacter;
	// プレイヤー番号設定
	pSelect_chara->m_PlayerID = nPlayerId;
	// 位置設定
	pSelect_chara->m_pos = pos;
	// 初期化処理
	pSelect_chara->Init();
	// シーン管理
	pSelect_chara->ManageSetting(CScene::LAYER_SELECTCHARACTER);
	// 生成したオブジェクトを返す
	return pSelect_chara;
}

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// 静的変数の初期化
// (選択画面の初期化時に関数を呼ぶ)
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void CSelectCharacter::InitStatic(void)
{
	for (int nCntSelectChara = 0; nCntSelectChara < CONTROLPLAYER_MAX; nCntSelectChara++)
	{
		m_SaveCharaType[nCntSelectChara] = 0;
	}
}
