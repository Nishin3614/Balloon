// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// チュートリアル_説明文処理の説明[tutorial_explan.h]
// Author : Koki Nishiyama
//
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#ifndef _TUTORIAL_EXPLAN_H_
#define _TUTORIAL_EXPLAN_H_	 // ファイル名を基準を決める

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// インクルードファイル
//
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include "scene_two.h"

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// マクロ定義
//
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// 前方宣言
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class CCollision;

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
// クラス
//
// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class CTutorial_Explan : public CScene_TWO
{
public:
	/* 列挙型 */
	// 説明文カテゴリー
	typedef enum
	{
		EXPLAN_COIN = 0,	// 説明文_コイン
		EXPLAN_CIRCLE,		// 説明文_ポイントサークル
		EXPLAN_THUNDER,		// 説明文_雷
		EXPLAN_ENEMY,		// 説明文_敵
		EXPLAN_POND1,		// 説明文_池1
		EXPLAN_POND2,		// 説明文_池2
		EXPLAN_POND3,		// 説明文_池3
		EXPLAN_MAX			// 説明文_最大数
	} EXPLAN;

	/* 関数 */
	CTutorial_Explan();
	~CTutorial_Explan();
	void Init(void);
	void Uninit(void);
	void Update(void);
	void Draw(void);
#ifdef _DEBUG
	void Debug(void);
#endif // _DEBUG
	// 当たった後の処理
	//	nObjType	: オブジェクトタイプ
	//	pScene		: 相手のシーン情報
	void Scene_MyCollision(
		int const &nObjType = 0,	// オブジェクトタイプ
		CScene * pScene = NULL		// 相手のシーン情報
	);
	// 相手に当てられた後の処理
	//	nObjType	: オブジェクトタイプ
	//	pScene		: 相手のシーン情報
	void Scene_OpponentCollision(
		int const &nObjType = 0,	// オブジェクトタイプ
		CScene * pScene = NULL		// 相手のシーン情報
	);
	// 自分から当たらなかった後の処理
	//	nObjType	: オブジェクトタイプ
	//	pScene		: 相手のシーン情報
	void Scene_NoMyCollision(
		int const &nObjType = 0,	// オブジェクトタイプ
		CScene * pScene = NULL		// 相手のシーン情報
	);
	// 相手に当てられなかった後の処理
	//	nObjType	: オブジェクトタイプ
	//	pScene		: 相手のシーン情報
	void Scene_NoOpponentCollision(
		int const &nObjType = 0,	// オブジェクトタイプ
		CScene * pScene = NULL		// 相手のシーン情報
	);

	// ポインター位置情報を取得
	D3DXVECTOR3 * Scene_GetPPos(void) { return NULL; };
	// ポインター過去の位置情報を取得
	D3DXVECTOR3 * Scene_GetPPosold(void) { return NULL; };
	// ポインター移動量情報の取得
	D3DXVECTOR3 * Scene_GetPMove(void) { return NULL; };
	// 作成処理
	//	nExplan		: 説明文カテゴリー
	static CTutorial_Explan * Create(
		int const &nExplan		// 説明文カテゴリー
	);
	// リソース情報読み込む設定
	static HRESULT Load(void);					// リソース情報読み込む設定
	// 読み込んだリソース情報を開放する
	static void UnLoad(void);					// 読み込んだリソース情報を開放する
protected:
private:
	/* 関数 */

	/* 変数 */
	static D3DXVECTOR3 m_aCollisionpos[EXPLAN_MAX];		// 当たり判定の位置
	static D3DXVECTOR3 m_aCollisionSize[EXPLAN_MAX];	// 当たり判定のサイズ
	static int m_nTexType[EXPLAN_MAX];					// テクスチャータイプ
	EXPLAN m_Explan;									// 説明文カテゴリー
	bool m_bDraw;										// 描画状態
};

#endif